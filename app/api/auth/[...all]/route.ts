// app/api/auth/[...all]/route.ts
import { auth } from "@/lib/auth"; // path to your auth file
import { toNextJsHandler } from "better-auth/next-js";
import { NextRequest, NextResponse } from "next/server";
// No longer need 'headers' from 'next/headers' for the session check logic
// import { headers } from "next/headers";

// Get the default handlers generated by better-auth
const defaultHandlers = toNextJsHandler(auth);
const originalGET = defaultHandlers.GET; // Store the original GET handler
export const POST = defaultHandlers.POST; // Export the original POST handler directly

// Define the user type (should match what you expect in the client)
interface SessionUser {
  id: string;
  email?: string | null;
  name?: string | null;
  // Add other relevant user fields if needed
}

// Export a new custom GET handler
export async function GET(request: NextRequest, context: { params: { all: string[] } }) {
  const url = request.nextUrl;

  // --- Check for our custom /api/auth/session endpoint ---
  if (url.pathname === '/api/auth/session') {
    console.log("[API Auth Catch-All] Handling /api/auth/session request");
    try {
      // Use the headers directly from the incoming NextRequest object.
      // This avoids the dynamic iteration issue with next/headers.
      const requestHeaders = request.headers; // This is already a Headers object

      // Pass the request headers directly to getSession
      const session = await auth.api.getSession({ headers: requestHeaders });

      if (session?.user) {
        // Return only the user data needed by the client
        const userData: SessionUser = {
          id: session.user.id,
          email: session.user.email,
          name: session.user.name,
          // Add other fields as needed
        };
        return NextResponse.json({ user: userData });
      } else {
        // No valid session
        console.log("[API Auth Catch-All] No valid session found for /api/auth/session");
        return NextResponse.json({ user: null }, { status: 401 }); // Use 401 Unauthorized
      }
    } catch (error) {
      console.error("[API Auth Session Catch-All] Error:", error);
      // Add more specific error logging if possible
      if (error instanceof Error) {
        console.error("[API Auth Session Catch-All] Error Message:", error.message);
      }
      return NextResponse.json({ user: null, error: 'Internal Server Error' }, { status: 500 });
    }
  }

  // --- If not /api/auth/session, delegate to the original better-auth GET handler ---
  console.log(`[API Auth Catch-All] Delegating GET ${url.pathname} to better-auth`);
  if (originalGET) {
    // Pass the request and context to the original handler
    return originalGET(request, context);
  }

  // Fallback if the original GET handler doesn't exist or doesn't handle the route
  console.warn(`[API Auth Catch-All] No handler found for GET ${url.pathname}`);
  return NextResponse.json({ message: "Endpoint not found" }, { status: 404 });
}